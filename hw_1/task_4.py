# Задача 4. Яма
# Представьте, что вы разрабатываете компьютерную игру с текстовой графикой.
# Вам поручили создать генератор ландшафта. Напишите программу, которая
# получает на вход число N и выводит на экран числа в виде ямы:
# Подсказка № 1
# В каждой строке ямы будут числа, точки и числа с другой стороны. Вам нужно создать
# структуру для генерации каждого из этих элементов в строке.
# Подсказка № 2
# Определите, как должна выглядеть левая часть ямы. Левая часть состоит из
# убывающих чисел, начиная с depth и уменьшаясь до значения, зависящего от
# текущей строки.
# Подсказка № 3
# Подсчитайте количество точек . в каждой строке. Количество точек зависит от текущей
# строки и будет в два раза больше разности между depth и номером текущей строки
# минус один.
# Подсказка № 4
# Определите, как должна выглядеть правая часть ямы. Правая часть состоит из
# возрастающих чисел, начиная с значения, зависящего от текущей строки, и заканчивая
# значением depth.

WIDTH_PIT = 2
PIT = '.'

depth = int(input('Введите число - глубина ямы: '))

for row in range(depth):
    dot = (depth - row - 1) * WIDTH_PIT
    border = depth - row
    left = depth

    while border <= left:
        print(left, end='')
        left -= 1

    print(PIT * dot, end='')

    while border <= depth:
        print(border, end='')
        border += 1
    print()


# # Идеальное решение
# # Запрос у пользователя глубины ямы
# depth = int(input('Введите глубину ямы: '))
# # Внешний цикл проходит по каждой строке ямы
# for line in range(depth):
#     # Генерация левой части ямы
#     for left_number in range(depth, depth - line - 1, -1):
#         print(left_number, end="")
#     # Подсчёт количества точек
#     point_count = 2 * (depth - line - 1)
#     # Вывод точек
#     print("." * point_count, end="")
#     # Генерация правой части ямы
#     for right_number in range(depth - line, depth + 1):
#         print(right_number, end="")
#     # Переход на новую строку после завершения текущей
#     print()
