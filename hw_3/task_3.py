# Задача 3. Проверка палиндрома
# Напишите программу, которая принимает строку и определяет, является ли она
# палиндромом (читается одинаково с обеих сторон).
# Подсказка № 1
# После получения строки от пользователя, используйте метод lower() для
# преобразования всех символов в нижний регистр. Это поможет игнорировать регистр
# при проверке палиндрома.
# Подсказка № 2
# Создайте пустое множество odd_chars для хранения символов, которые встречаются
# в строке нечетное количество раз. Это множество будет использоваться для проверки,
# сколько символов встречаются нечетное количество раз.
# Подсказка № 3
# Для каждого символа в строке используйте операцию if char in odd_chars для
# проверки, содержится ли символ в множестве. Если да, удалите его, иначе добавьте
# его в множество.
# Подсказка № 4
# После обработки всех символов в строке, используйте len(odd_chars) для
# определения размера множества. Если его размер не больше одного, строка может
# быть палиндромом.

# Дивен мне вид, довод

text = input('Enter text: ').lower().split(' ')

lst_chars = []
for el in text:
    lst_chars.extend(el)

#1
result1 = "Палиндром" if lst_chars == lst_chars[::-1] else "Не палиндром"

#2
back = 0
result2 = ''
for i in range(len(lst_chars) // 2):
    back -= 1
    if lst_chars[i] != lst_chars[back]:
        result2 = 'Не палиндром'
        break
    else:
        result2 = 'Палиндром'

print(f'{result1=}, {result2=}')


# # perfect solution
# string = input("Введите строку: ").lower()
# odd_chars = set()
#
# for char in string:
#     if char in odd_chars:
#         odd_chars.remove(char)
#     else:
#         odd_chars.add(char)
#
# if len(odd_chars) <= 1:
#     print("Строка является палиндромом")
# else:
#     print("Строка не является палиндромом")
