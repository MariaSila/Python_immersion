# Задача 2. Недоделка
# Вы пришли на работу в компанию по разработке игр, целевая аудитория —
# дети и их родители. У предыдущего программиста было задание сделать две
# игры в одном приложении, чтобы пользователь мог выбирать одну из них.
# Однако программист, на место которого вы пришли, перед увольнением не
# успел выполнить эту задачу и оставил только небольшой шаблон проекта.
# Используя этот шаблон, реализуйте игры «Камень, ножницы, бумага» и «Угадай
# число».
# Правила игры «Камень, ножницы, бумага»: программа запрашивает у
# пользователя строку и выводит, победил он или проиграл. Камень бьёт
# ножницы, ножницы режут бумагу, бумага кроет камень.
# Правила игры «Угадай число»: программа запрашивает у пользователя число
# до тех пор, пока он не отгадает загаданное.
# def rock_paper_scissors():
# # Здесь будет игра «Камень, ножницы, бумага»
# def guess_the_number():
# # Здесь будет игра «Угадай число»
# def mainMenu():
# # Здесь главное меню игры
# mainMenu():
# pass
# Подсказка № 1
# Реализуйте функцию для игры "Камень, ножницы, бумага". Начните с запроса выбора
# игрока. Убедитесь, что ваш код правильно обрабатывает ввод пользователя и
# проверяет его на допустимые значения. Затем, используя логические условия,
# определите победителя, исходя из выбранного игроком и компьютером варианта.
# Подсказка № 2
# Создайте цикл для игры "Угадай число". В этой игре, создайте бесконечный цикл,
# который будет продолжаться до тех пор, пока игрок не угадает загаданное число.
# Внутри цикла запрашивайте ввод числа у пользователя и проверяйте его на
# соответствие загаданному числу.
# Подсказка № 3
# Определите структуру главного меню. В main_menu предоставьте пользователю выбор
# между двумя играми и опцией выхода. Используйте условные операторы для
# определения, какую функцию вызывать в зависимости от выбора пользователя.

import random


def rock_paper_scissors():
    lst_words = ['камень', 'ножницы', 'бумага']
    player_2 = random.choice(lst_words)
    while True:
        input_pl1 = input('\nВведите число соответственно 1 - камень, 2 - ножницы, 3 - бумага: ')
        match input_pl1:
            case '1':
                player_1 = 'камень'
                break
            case '2':
                player_1 = 'ножницы'
                break
            case '3':
                player_1 = 'бумага'
                break
            case _:
                print('Неверный ввод')

    print(f'\nТвой ход {player_1}, ход противника {player_2}')

    if player_1 == player_2:
        print('Ничья')
    elif player_1 == 'камень' and player_2 == 'ножницы':
        print(f'Ты выйграл! {player_1} бьет {player_2}')
    elif player_1 == 'ножницы' and player_2 == 'бумага':
        print(f'Ты выйграл! {player_1} режет {player_2}')
    elif player_1 == 'бумага' and player_2 == 'камень':
        print(f'Ты выйграл! {player_1} кроет {player_2}')
    else:
        print('Ты проиграл.')


def guess_the_number():
    start_num = 10
    final_num = 100
    hidden_num = random.randrange(start_num, final_num)
    count = 1

    while True:
        answer = int(input(f'\nУгадай число из диапазона от {start_num} до {final_num - 1}. Твой ответ : '))
        if answer == hidden_num:
            print(f'\nУра! Ты угадал за {count} попыток! Загаданное число {hidden_num}')
            break
        if answer > hidden_num:
            print(f'Загаданное число меньше {answer}')
            count += 1
        if answer < hidden_num:
            print(f'Загаданное число больше {answer}')
            count += 1


def mainMenu():
    while True:
        game_selection = int(input(f'\nВыбери игру:\n'
                                   f'1 - Камень, ножницы, бумага\n'
                                   f'2 - Угадай число\n'
                                   f'0 - Выход из приложения\n'
                                   f'Введи число: '))

        match game_selection:
            case 1:
                rock_paper_scissors()
            case 2:
                guess_the_number()
            case 0:
                print('\nПриложение закрывается. До встречи!')
                break
            case _:
                print('Неверный ввод')


mainMenu()

# # perfect solution


# def rock_paper_scissors():
#     player = int(input("1 - камень, 2 - ножницы, 3 - бумага. Введите ваш выбор: "))
#     computer = 1
#
#     if player == computer:
#         print("Ничья!")
#     elif (player == 1 and computer == 2) or (player == 2 and computer == 3) or (player == 3 and computer == 1):
#         print("Вы выиграли!")
#     elif (player == 1 and computer == 3) or (player == 2 and computer == 1) or (player == 3 and computer == 2):
#         print("Вы проиграли!")
#     else:
#         print("Неверная команда. Попробуйте снова.")


# def guess_the_number():
#     number = 7
#     while True:
#         guess_num = int(input('Введите число: '))
#         if guess_num > number:
#             print('Число больше, чем нужно. Попробуйте ещё раз!')
#         elif guess_num < number:
#             print('Число меньше, чем нужно. Попробуйте ещё раз!')
#         else:
#             print('Поздравляю, вы угадали! Возврат в главное меню.')
#             break


# def main_menu():
#     while True:
#         print('Во что хотите поиграть?')
#         game = int(input('1 - Камень, ножницы, бумага; 2 - Угадай число; 3 - Выйти: '))
#
#         if game == 1:
#             rock_paper_scissors()
#         elif game == 2:
#             guess_the_number()
#         elif game == 3:
#             print('Выход из программы.')
#             break
#         else:
#             print('Неверная команда. Попробуйте снова.')
#
#
#
# main_menu()
