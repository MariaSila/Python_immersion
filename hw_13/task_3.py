# Задача 3. Счастливое число
# Напишите программу, которая запрашивает у пользователя число до тех пор, пока
# сумма этих чисел не станет больше либо равна 777. Каждое введенное число при этом
# дозаписывается в файл. Сделайте так, чтобы перед дозаписью программа с
# вероятностью 1 к 13 выбрасывала пользователю случайное исключение и
# завершалась.
#       Пример 1:
#           Введите число: 10
#           Введите число: 500
#           Введите число: 200
#           Введите число: 67
#           Вы успешно выполнили условие для выхода из порочного цикла!
#       Содержимое файла out_file.txt:
#           10
#           500
#           200
#           67
#       Пример 2:
#           Введите число: 10
#           Введите число: 500
#           Вас постигла неудача!
#       Содержимое файла out_file.txt:
#           10
# Подсказка № 1
#   Используйте методы класса для обработки файлов. В классе создайте методы для
#   работы с файлами, такие как удаление файла и запись данных. Это улучшит
#   организацию кода и сделает его более читаемым.
# Подсказка № 2
#   Обрабатывайте исключения для ввода данных. Используйте конструкцию try-except
#   для обработки исключений, возникающих при вводе данных пользователем. Это
#   гарантирует, что программа корректно реагирует на неправильный ввод и продолжает работу.
# Подсказка № 3
#   Реализуйте метод, который случайным образом выбрасывает исключения с
#   определенной вероятностью. Это можно сделать, используя функцию
#   random.randint() для генерации случайных чисел.
# Подсказка № 4
#   Удаляйте файл перед началом записи, чтобы начать запись в новый файл, сначала
#   удалите существующий файл, если он есть. Это можно сделать с помощью метода
#   os.remove(). Убедитесь, что вы обрабатываете возможные ошибки при удалении файла.
