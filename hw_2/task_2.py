# Задание 2. Преобразование числа в шестнадцатеричное
# представление
# Напишите программу, которая получает целое число и возвращает его
# шестнадцатеричное строковое представление. Функцию hex используйте для
# проверки своего результата.
# Подсказка № 1
# Для преобразования числа в шестнадцатеричное представление нужно сначала
# определить символы, которые будут использоваться для представления цифр в этой
# системе. В шестнадцатеричной системе используются цифры от 0 до 9 и буквы от A до
# F.
# Подсказка № 2
# Обработайте случай, когда число равно 0. В этом случае шестнадцатеричное
# представление числа всегда будет '0'.
# Подсказка № 3
# Учтите, что функция должна правильно обрабатывать отрицательные числа. Сначала
# сохраните информацию о том, является ли число отрицательным, а затем
# преобразуйте число в положительное для удобства работы.
# Подсказка № 4
# Создайте цикл, который будет последовательно делить число на 16 и записывать
# остаток от деления в строку, представляющую шестнадцатеричное число. Добавляйте
# соответствующий символ к результату.
# Подсказка № 5
# После завершения преобразования добавьте префикс '-' для отрицательных чисел.
# Верните строковое представление числа в шестнадцатеричной системе.

NUMBER_SYSTEM = 16

n = int(input('Enter integer: '))

hexadecimal_dict = {10: 'a', 11: 'b', 12: 'c', 13: 'd', 14: 'e', 15: 'f'}
decimal_num = n
result = ''

if n == 0:
    result = '0'

if n < 0:
    decimal_num = abs(n)

while decimal_num > 0:
    current_num = decimal_num % NUMBER_SYSTEM
    decimal_num = decimal_num // NUMBER_SYSTEM

    if current_num > 9:
        result = hexadecimal_dict.get(current_num) + result
    else:
        result = str(current_num) + result

if n < 0:
    result = f'-{result}'

print(f'{hex(n)=}')
print(f'Десятичное число {n} в шестнадцатеричном представлении {result} ')


# # Идеальное решение
# numbers = [255, 16, 0, -42]  # Примеры чисел
# hex_digits = '0123456789ABCDEF'  # Определяем символы для цифр в шестнадцатеричной системе
# for number in numbers:
#     if number == 0:   # Если число равно 0, то возвращаем '0'
#         hex_string = '0'
#     else:
#         is_negative = number < 0  # Обрабатываем отрицательные числа
#         if is_negative:
#             number = -number
#
#         # Преобразование числа в шестнадцатеричное представление
#         hex_string = ''
#         while number > 0:
#             remainder = number % 16
#             hex_string = hex_digits[remainder] + hex_string
#             number //= 16
#
#         # Добавляем префикс '-' для отрицательных чисел
#         if is_negative:
#             hex_string = '-' + hex_string
#
#     print(hex_string)
